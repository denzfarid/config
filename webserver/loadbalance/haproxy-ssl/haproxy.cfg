################################################################################################
# R Farid N ; farid_@msn.com 18-september-2016 03:39                                           #
################################################################################################
# http://www.tecmint.com/install-haproxy-load-balancer-in-linux/                               #
# Put this file in /etc/haproxy/haproxy.cfg                                                    #
# This config listen 80 and 443 so disable force 301 to https in backend server just listen 80 #
# Docs in here https://cbonte.github.io/haproxy-dconv/1.7/configuration.html                   #
################################################################################################
global
        log         127.0.0.1 local2

        maxconn 200000
        stats socket /var/run/haproxadm.sock mode 660 level admin

# set 2048 bits for Diffie-Hellman key
        tune.ssl.default-dh-param 2048
        debug                                                                                                                                                          
        quiet                                                                                                                                                          
        user haproxy                                                                                                                                                   
        group haproxy                                                                                                                                                  

#SSL Section
      ssl-default-bind-options no-sslv3 no-tls-tickets
      ssl-default-bind-ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH        

defaults                                                                                                                                                               
        log             global                                                                                                                                         
        mode            http 
        option          httplog 
        option          dontlognull                                                                                                                                    

        option http-pretend-keepalive
        timeout http-request 7s                                                                                                                                       
        option forwardfor       except 127.0.0.0/8                                                                                                                     
        retries         3                                                                                                                                              
option redispatch
        maxconn 4000

#timeout connect 86400
    timeout connect         10s
    timeout client          1m
    timeout server          1m

        stats enable                                                                                                                                                   
        stats hide-version                                                                                                                                             
        stats refresh 5s                                                                                                                                               
        stats show-node                                                                                                                                                
        stats auth admin:h4pr0xy  #Haproxy-Management/status
        stats uri  /stats  #<ip.addr>/stats

frontend https
        #multiple Certificate domain ssl just file .pem : cat *.key *.crt >> /etc/haproxy/ssl/domain1.pem or domain2.pem
        bind *:443 ssl crt /etc/haproxy/ssl/

        reqadd X-Forwarded-Proto:\ https
        http-response set-header X-Content-Type-Options nosniff
    http-response add-header Access-Control-Allow-Origin %[capture.req.hdr(0)] if { capture.req.hdr(0) -m found }
    rspadd Access-Control-Allow-Headers:\ Origin,\ X-Requested-With,\ Content-Type,\ Accept  if { capture.req.hdr(0) -m found }  

        acl is_devel hdr_end(host) -i -f /etc/haproxy/host/devel
        acl is_prod hdr_end(host) -i -f /etc/haproxy/host/prod

        use_backend server if is_prod
	default_backend server if is_devel

frontend http

        # Listen on port 80
        bind *:80
#force to https
redirect scheme https if !{ ssl_fc } 
        
        mode http
 
        # Define ACLs for each domain
        acl is_devel hdr_end(host) -i -f /etc/haproxy/host/devel
        acl is_prod hdr_end(host) -i -f /etc/haproxy/host/prod
 
        # Figure out which backend (= VM) to use
        use_backend server if is_prod
	default_backend server if is_devel
#Define Backend server

backend server

        http-request set-header X-Forwarded-Port %[dst_port]
        http-request add-header X-Forwarded-Proto https if { ssl_fc }
#enable HSTS header for this backend
        rspadd Strict-Transport-Security:\ max-age=15768000;\ includeSubDomains 
#enable XSS protection for this backend
        rspadd X-XSS-Protection:\ 1;\ mode=block
#iframe https://www.owasp.org/index.php/Clickjacking_Defense_Cheat_Sheet
        rspadd X-Frame-Options:\ *
        #rspadd X-Frame-Options:\ SAMEORIGIN

        balance roundrobin

        option forwardfor
        option http-pretend-keepalive
        cookie JSESSIONID prefix
        
# Redirect to another server on port 80 
# Add backend server in here, Change backend name FrontEnd1 or FrontEnd2 
        server FrontEnd1 192.168.1.17:80 check inter 5000
        server FrontEnd2 192.168.2.18:80 check inter 5000